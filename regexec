#!/usr/bin/env python2

import re
import sys
import string
import argparse
import subprocess

import argparse
parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)

parser.add_argument(
    "-e", 
    help="The (python2) regular expression", 
    default=r"\[include (.+)\]"
)

parser.add_argument(
    "-c", 
    help="The command to run with the expression's match groups as arguments and who's output replaces the match", 
    default=r"cat \1"
)

parser.add_argument(
    "-v", 
    help="The verbosity level", 
    default=0,
    type=int
)

args = parser.parse_args()

def verbose_log(l, s):
    if args.v >= l:
        print(s)

p = re.compile(args.e)

inp = sys.stdin.read()
out = ""

matches = p.finditer(inp)

inp_index = 0
for match in matches:
    verbose_log(1, "lastindex: " + str(match.lastindex))
    span = match.span()
    
    out += inp[inp_index:span[0]]
    inp_index = span[1]

    new_c = args.c
    for index in xrange(1, match.lastindex + 1):
        verbose_log(1, "$" + str(index) + ": " + match.group(index))
        new_c = string.replace(new_c, "\\" + str(index), match.group(index))
        verbose_log(1, "new_c: " + new_c)

    suboutput = subprocess.check_output(new_c, shell=True)
    verbose_log(1, "suboutput: " + suboutput)
    out += suboutput

out += inp[inp_index:]

print(out),
